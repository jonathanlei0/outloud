(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function e(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(t){if(t.ep)return;t.ep=!0;const o=e(t);fetch(t.href,o)}})();let a={rate:1,voice:""};const p=document.getElementById("speakSelected"),E=document.getElementById("stopSpeaking"),u=document.getElementById("rate"),s=document.getElementById("voice"),h=document.getElementById("rateValue");document.addEventListener("DOMContentLoaded",async()=>{await y(),await v(),S(),f()});async function y(){const n=await chrome.storage.local.get(["voiceSettings"]);n.voiceSettings&&(a={...a,...n.voiceSettings})}async function d(){await chrome.storage.local.set({voiceSettings:a})}async function v(){const[n]=await chrome.tabs.query({active:!0,currentWindow:!0});n!=null&&n.id&&await m(n.id)?g(n.id,{type:"GET_VOICES"},r=>{r&&r.voices?l(r.voices):l([{id:"694f9389-aac1-45b6-b726-9d9369183238",name:"Default Voice",language:"en"},{id:"a0e99841-438c-4a64-b679-ae501e7d6091",name:"British Male",language:"en"},{id:"2ee87190-8f84-4925-97da-e52547f9462c",name:"American Female",language:"en"},{id:"820a3788-2b37-4d21-847a-b65d8a68c99a",name:"Australian Male",language:"en"}])}):l([{id:"694f9389-aac1-45b6-b726-9d9369183238",name:"Default Voice",language:"en"},{id:"a0e99841-438c-4a64-b679-ae501e7d6091",name:"British Male",language:"en"},{id:"2ee87190-8f84-4925-97da-e52547f9462c",name:"American Female",language:"en"},{id:"820a3788-2b37-4d21-847a-b65d8a68c99a",name:"Australian Male",language:"en"}])}async function m(n){return new Promise(r=>{chrome.tabs.sendMessage(n,{type:"PING"},e=>{chrome.runtime.lastError?(console.log("Content script not ready:",chrome.runtime.lastError.message),r(!1)):r(!0)})})}function g(n,r,e){chrome.tabs.sendMessage(n,r,i=>{chrome.runtime.lastError?(console.error("Error sending message to tab:",chrome.runtime.lastError.message),e&&e(null)):e&&e(i)})}function l(n){s.innerHTML='<option value="">Default Voice</option>',n.forEach(r=>{const e=document.createElement("option");e.value=r.id,e.textContent=r.name,s.appendChild(e)}),s.value=a.voice}function S(){p.addEventListener("click",async()=>{const r=(await chrome.storage.local.get(["lastSelectedText"])).lastSelectedText;if(r)chrome.runtime.sendMessage({type:"SPEAK_TEXT",text:r,options:a},e=>{chrome.runtime.lastError?(console.error("Error sending message to background:",chrome.runtime.lastError.message),alert("Error: Could not communicate with background script")):e&&!e.success&&alert(`Error: ${e.error}`)}),window.close();else{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});e!=null&&e.id&&await m(e.id)?g(e.id,{type:"GET_SELECTION"},i=>{i&&i.text?(chrome.runtime.sendMessage({type:"SPEAK_TEXT",text:i.text,options:a},t=>{chrome.runtime.lastError?(console.error("Error sending message to background:",chrome.runtime.lastError.message),alert("Error: Could not communicate with background script")):t&&!t.success&&alert(`Error: ${t.error}`)}),window.close()):alert("Please select some text on the page first.")}):alert("Please select some text on the page first, or make sure you're on a regular webpage (not a chrome:// page).")}}),E.addEventListener("click",()=>{chrome.runtime.sendMessage({type:"STOP_SPEAKING"},n=>{chrome.runtime.lastError&&console.error("Error sending stop message:",chrome.runtime.lastError.message)}),window.close()}),u.addEventListener("input",()=>{a.rate=parseFloat(u.value),f(),d()}),s.addEventListener("change",()=>{a.voice=s.value,d()})}function f(){u.value=a.rate.toString(),s.value=a.voice,h.textContent=`${a.rate}x`}
