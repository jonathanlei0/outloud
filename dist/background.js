const u="sk_car_spMZ7qpuWPCGV6nqZYiSsb";console.log("üîë Cartesia API key loaded:",`${u.substring(0,10)}...`);const a=class a{static async generateSpeech(e){console.log("üéØ CartesiaService.generateSpeech called"),console.log("Request:",{text:e.text.substring(0,50)+"...",voiceId:e.voiceId,speed:e.speed});const s=e.voiceId||a.VOICES[0].id;let o=e.text;e.speed&&e.speed!==1&&(o=e.text);const n={model_id:"sonic-2",transcript:o,voice:{mode:"id",id:s},output_format:{container:"mp3",bit_rate:128e3,sample_rate:44100},language:"en"};console.log("üìã Request body:",JSON.stringify(n,null,2));try{console.log("üåê Making fetch request to:",`${a.API_BASE}/tts/bytes`);const r=await fetch(`${a.API_BASE}/tts/bytes`,{method:"POST",headers:{"Cartesia-Version":a.API_VERSION,Authorization:`Bearer ${u}`,"Content-Type":"application/json"},body:JSON.stringify(n)});if(console.log("üì° Response status:",r.status),console.log("üì° Response headers:",r.headers),!r.ok){const c=await r.text();throw console.error("‚ùå API Error Response:",c),new Error(`Cartesia API error: ${r.status} ${r.statusText} - ${c}`)}const i=await r.arrayBuffer();return console.log("‚úÖ Successfully received audio buffer:",i.byteLength,"bytes"),i}catch(r){throw console.error("‚ùå Error calling Cartesia API:",r),r}}static getVoices(){return a.VOICES}};a.API_BASE="https://api.cartesia.ai",a.API_VERSION="2025-04-16",a.VOICES=[{id:"694f9389-aac1-45b6-b726-9d9369183238",name:"Default Voice",language:"en",gender:"neutral"},{id:"a0e99841-438c-4a64-b679-ae501e7d6091",name:"British Male",language:"en",gender:"male"},{id:"2ee87190-8f84-4925-97da-e52547f9462c",name:"American Female",language:"en",gender:"female"},{id:"820a3788-2b37-4d21-847a-b65d8a68c99a",name:"Australian Male",language:"en",gender:"male"}];let l=a;chrome.runtime.onMessage.addListener((t,e,s)=>t.type==="SPEAK_TEXT"?(console.log("üé§ Background received SPEAK_TEXT message:",t.text.substring(0,50)+"..."),f(t,s),!0):t.type==="STOP_SPEAKING"?(m(s),!0):!1);async function d(t){return new Promise(e=>{chrome.tabs.sendMessage(t,{type:"PING"},s=>{chrome.runtime.lastError?(console.log("Content script not ready, attempting to inject..."),chrome.scripting.executeScript({target:{tabId:t},files:["content.js"]},()=>{chrome.runtime.lastError?(console.error("Failed to inject content script:",chrome.runtime.lastError.message),e(!1)):(console.log("Content script injected, testing again..."),setTimeout(()=>{chrome.tabs.sendMessage(t,{type:"PING"},o=>{e(!chrome.runtime.lastError)})},100))})):(console.log("Content script already ready"),e(!0))})})}async function p(t,e,s=3){for(let o=1;o<=s;o++){if(console.log(`üì§ Attempt ${o}/${s}: Sending audio to content script in tab:`,t),await new Promise(r=>{chrome.tabs.sendMessage(t,{type:"PLAY_AUDIO",audioData:e,mimeType:"audio/mpeg"},i=>{chrome.runtime.lastError?(console.error(`‚ùå Attempt ${o} failed:`,chrome.runtime.lastError.message),r(!1)):(console.log(`‚úÖ Attempt ${o} succeeded: Audio sent to content script`),r(!0))})}))return!0;o<s&&(console.log("üîÑ Retrying... ensuring content script is ready first"),await d(t),await new Promise(r=>setTimeout(r,200)))}return!1}async function f(t,e){var s,o;try{const n={text:t.text,voiceId:(s=t.options)==null?void 0:s.voice,speed:((o=t.options)==null?void 0:o.rate)||1};console.log("üîä Generating speech with Cartesia for:",t.text.substring(0,50)+"..."),console.log("Voice ID:",n.voiceId||"default"),console.log("Speed:",n.speed),console.log("üì° Calling Cartesia API...");const r=await l.generateSpeech(n);console.log("‚úÖ Received audio buffer:",r.byteLength,"bytes"),console.log("üîÑ Converting to base64...");const i=y(r);console.log("‚úÖ Base64 conversion complete:",i.length,"characters");const[c]=await chrome.tabs.query({active:!0,currentWindow:!0});if(c!=null&&c.id){if(!await d(c.id)){console.error("‚ùå Could not prepare content script"),e({success:!1,error:"Could not prepare audio playback. Make sure you're on a regular webpage."});return}const g=await p(c.id,i);e(g?{success:!0}:{success:!1,error:"Could not play audio. Make sure you're on a regular webpage and try again."})}else console.error("‚ùå No active tab found"),e({success:!1,error:"No active tab found"})}catch(n){console.error("‚ùå Error generating speech:",n),e({success:!1,error:n instanceof Error?n.message:"Unknown error"})}}async function m(t){try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});e!=null&&e.id?chrome.tabs.sendMessage(e.id,{type:"STOP_AUDIO"},s=>{chrome.runtime.lastError?(console.error("Error sending stop message to content script:",chrome.runtime.lastError.message),t({success:!0})):t({success:!0})}):t({success:!0})}catch(e){console.error("Error stopping speech:",e),t({success:!1,error:e instanceof Error?e.message:"Unknown error"})}}function y(t){const e=new Uint8Array(t);let s="";for(let o=0;o<e.byteLength;o++)s+=String.fromCharCode(e[o]);return btoa(s)}chrome.action.onClicked.addListener(t=>{});console.log("OutLoud background service worker loaded with Cartesia TTS");
